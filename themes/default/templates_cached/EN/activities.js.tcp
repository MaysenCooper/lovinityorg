<?php
return unserialize("a:5:{i:0;a:1:{i:0;a:1:{i:0;a:5:{i:0;s:33:\"tcpfunc_58dd79883b1c58.04783731_1\";i:1;a:0:{}i:2;i:1;i:3;s:0:\"\";i:4;s:0:\"\";}}}i:1;a:0:{}i:2;s:10:\"activities\";i:3;N;i:4;a:1:{s:33:\"tcpfunc_58dd79883b1c58.04783731_1\";s:6398:\"\$tpl_funcs['tcpfunc_58dd79883b1c58.04783731_1']=\$KEEP_TPL_FUNCS['tcpfunc_58dd79883b1c58.04783731_1']=recall_named_function('58dd79883b1cf3.95325261','\$parameters,\$cl',\"echo \\\"\\\\\\\"use strict\\\\\\\";\\\\n\\\\n// Assume that our activity feed needs updating to start with\\\\nif (typeof window.latest_activity=='undefined')\\\\n{\\\\n	window.latest_activity=0;\\\\n	window.s_ajax_update_locking=0;\\\\n	window.activities_feed_grow=true;\\\\n}\\\\n\\\\nfunction s_update_get_data()\\\\n{\\\\n	// Lock feed updates by setting s_ajax_update_locking to 1\\\\n	if ((++window.s_ajax_update_locking)>1)\\\\n	{\\\\n		window.s_ajax_update_locking=1;\\\\n	} else\\\\n	{\\\\n		// First we check whether our feed is already up to date\\\\n		jQuery.ajax({\\\\n			url: 'https://www.lovinity.org/data_custom/latest_activity.txt?chrome_fix='+Math.floor(Math.random()*10000),\\\\n			data: {},\\\\n			success: function(data,status) {\\\\n				if (window.parseInt(data)!=window.latest_activity)\\\\n				{\\\\n					// If not then remember the new value\\\\n					window.latest_activity=window.parseInt(data);\\\\n\\\\n					// Now grab whatever updates are available\\\\n					var url='https://www.lovinity.org/data_custom/activities_updater.php'+keep_stub(true);\\\\n					var list_elements=\\\\\\\$('li','#activities_feed');\\\\n					var last_id=((typeof list_elements.attr('id')=='undefined')?'-1':list_elements.attr('id').replace(/^activity_/,''));\\\\n					var post_val='last_id='+last_id+'&mode='+window.activities_mode;\\\\n\\\\n					if ((window.activities_member_ids!==null) && (window.activities_member_ids!==''))\\\\n						post_val=post_val+'&member_ids='+window.activities_member_ids;\\\\n\\\\n					post_val+='&csrf_token='+window.encodeURIComponent(get_csrf_token()); // For CSRF prevention\\\\n\\\\n					jQuery.ajax({\\\\n						url: url.replace(/^https?:/,window.location.protocol),\\\\n						type: 'POST',\\\\n						data: post_val,\\\\n						cache: false,\\\\n						timeout: 5000,\\\\n						success: function(data,stat) { s_update_show(data,stat); },\\\\n						error: function(a,stat,err) { s_update_show(err,stat); }\\\\n					});\\\\n				} else\\\\n				{\\\\n					// Allow feed updates\\\\n					window.s_ajax_update_locking=0;\\\\n				}\\\\n			},\\\\n			dataType: 'text'\\\\n		});\\\\n	}\\\\n}\\\\n\\\\n/**\\\\n * Receive and parse data for the activities activities feed\\\\n */\\\\nfunction s_update_show(data,stat)\\\\n{\\\\n	if (window.s_ajax_update_locking>1)\\\\n	{\\\\n		window.s_ajax_update_locking=1;\\\\n	} else\\\\n	{\\\\n		var succeeded=false;\\\\n		if (stat=='success')\\\\n		{\\\\n			if (\\\\\\\$('success',data).text()=='1')\\\\n			{\\\\n				var list_elements=\\\\\\\$('li','#activities_feed'); // Querying from current browser DOM\\\\n				var list_items=\\\\\\\$('listitem',data); // Querying from XML definition o new data\\\\n\\\\n				list_elements.removeAttr('toFade');\\\\n\\\\n				// Add in new items\\\\n				var top_of_list=document.getElementById('activities_holder').firstChild;\\\\n				jQuery.each(list_items,function() {\\\\n					var this_li=document.createElement('li');\\\\n					this_li.id='activity_'+\\\\\\\$(this).attr('id');\\\\n					this_li.className='activities_box box';\\\\n					this_li.setAttribute('toFade','yes');\\\\n					top_of_list.parentNode.insertBefore(this_li,top_of_list);\\\\n					set_inner_html(this_li,Base64.decode(\\\\\\\$(this).text()));\\\\n				});\\\\n\\\\n				var no_messages=document.getElementById('activity_-1');\\\\n				if (no_messages) no_messages.style.display='none';\\\\n\\\\n				list_elements=\\\\\\\$('li','#activities_feed'); // Refresh, so as to include the new activity nodes\\\\n\\\\n				if ((!window.activities_feed_grow) && (list_elements.length>window.activities_feed_max)) // Remove anything passed the grow length\\\\n				{\\\\n					for (var i=window.activities_feed_max;i<list_elements.length;i++)\\\\n					{\\\\n						list_elements.last().remove();\\\\n					}\\\\n				}\\\\n\\\\n				\\\\\\\$('#activities_general_notify').text('');\\\\n				\\\\\\\$('li[toFade=\\\\\\\"yes\\\\\\\"]','#activities_feed').hide().fadeIn(1200);\\\\n				succeeded=true;\\\\n			} else\\\\n			{\\\\n				if (\\\\\\\$('success',data).text()=='2')\\\\n				{\\\\n					\\\\\\\$('#activities_general_notify').text('');\\\\n					succeeded=true;\\\\n				}\\\\n			}\\\\n		}\\\\n		if (!succeeded)\\\\n		{\\\\n			\\\\\\\$('#activities_general_notify').text('\\\",\\n	ecv(\\\$cl,array(2,8),2,\\\"INTERNAL_ERROR\\\",array()),\\n	\\\"');\\\\n		}\\\\n		window.s_ajax_update_locking=0;\\\\n	}\\\\n}\\\\n\\\\nfunction s_update_remove(event,id)\\\\n{\\\\n	window.fauxmodal_confirm(\\\\n		'This will permanently delete the message.',\\\\n		function(result)\\\\n		{\\\\n			if (result)\\\\n			{\\\\n				var url='https://www.lovinity.org/data_custom/activities_removal.php'+keep_stub(true);\\\\n\\\\n				var post_val='removal_id='+id;\\\\n				post_val+='&csrf_token='+window.encodeURIComponent(get_csrf_token()); // For CSRF prevention\\\\n\\\\n				jQuery.ajax({\\\\n					url: url.replace(/^https?:/,window.location.protocol),\\\\n					type: 'POST',\\\\n					data: post_val,\\\\n					cache: false,\\\\n					timeout: 5000,\\\\n					success: function(data,stat) { s_update_remove_show(data,stat); },\\\\n					error: function(a,stat,err) { s_update_remove_show(err,stat); }\\\\n				});\\\\n			}\\\\n		}\\\\n	);\\\\n	event.preventDefault();\\\\n}\\\\n\\\\nfunction s_update_remove_show(data,stat)\\\\n{\\\\n	var succeeded=false;\\\\n	var status_id='';\\\\n\\\\n	var animation_speed=1600;\\\\n\\\\n	if (stat=='success')\\\\n	{\\\\n		if (\\\\\\\$('success',data).text()=='1')\\\\n		{\\\\n			status_id='#activity_'+\\\\\\\$('status_id',data).text();\\\\n			\\\\\\\$('.activities_content',status_id,'#activities_feed').text(\\\\\\\$('feedback',data).text()).addClass('activities_content__remove_success').hide().fadeIn(animation_speed,function() {\\\\n				\\\\\\\$(status_id,'#activities_feed').fadeOut(animation_speed,function() {\\\\n					\\\\\\\$(status_id,'#activities_feed').remove();\\\\n				});\\\\n			});\\\\n		} else\\\\n		{\\\\n			switch (\\\\\\\$('err',data).text())\\\\n			{\\\\n				case 'perms':\\\\n					status_id='#activity_'+\\\\\\\$('status_id',data).text();\\\\n					var backup_up_text=\\\\\\\$('activities_content',status_id,'#activities_feed').text();\\\\n					\\\\\\\$('.activities_content',status_id,'#activities_feed').text(\\\\\\\$('feedback',data).text()).addClass('activities_content__remove_failure').hide().fadeIn(animation_speed,function() {\\\\n						\\\\\\\$('.activities_content',status_id,'#activities_feed').fadeOut( animation_speed,function() {\\\\n							\\\\\\\$('.activities_content',status_id,'#activities_feed').text(backup_up_text).removeClass('activities_content__remove_failure').fadeIn(animation_speed);\\\\n						});\\\\n					});\\\\n					break;\\\\n				case 'missing':\\\\n				default:\\\\n					break;\\\\n			}\\\\n		}\\\\n	}\\\\n}\\\\n\\\";\");\";}}");

?>