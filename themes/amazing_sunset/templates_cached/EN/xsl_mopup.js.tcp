<?php
return unserialize("a:5:{i:0;a:1:{i:0;a:1:{i:0;a:5:{i:0;s:33:\"tcpfunc_58dd0cd0117546.12811599_1\";i:1;a:0:{}i:2;i:1;i:3;s:0:\"\";i:4;s:0:\"\";}}}i:1;a:0:{}i:2;s:9:\"xsl_mopup\";i:3;N;i:4;a:1:{s:33:\"tcpfunc_58dd0cd0117546.12811599_1\";s:3073:\"\$tpl_funcs['tcpfunc_58dd0cd0117546.12811599_1']=\$KEEP_TPL_FUNCS['tcpfunc_58dd0cd0117546.12811599_1']=recall_named_function('58dd0cd01175f9.40670901','\$parameters,\$cl',\"echo \\\"// A workaround for XSL-to-XHTML systems that don't\\\\n//  implement XSL 'disable-output-escaping=\\\\\\\"yes\\\\\\\"'.\\\\n//\\\\n// sburke@cpan.org, Sean M. Burke.\\\\n//  - I hereby release this JavaScript code to the public domain.\\\\n\\\\nvar is_decoding;\\\\nvar DEBUG = 0;\\\\n\\\\nfunction complaining (s) { alert(s);  return s; }\\\\n\\\\nif(!(	document.getElementById && document.getElementsByName))\\\\n throw complaining(\\\\\\\"Your browser is too old to render this page properly.\\\\\\\"\\\\n  + \\\\\\\"  Consider going to getfirefox.com to upgrade.\\\\\\\");\\\\n\\\\nfunction check_decoding () {\\\\n  var d = document.getElementById('cometestme');\\\\n  if(!d) {\\\\n	 throw complaining(\\\\\\\"Can't find an id='cometestme' element?\\\\\\\");\\\\n  } else if (typeof d.textContent=='undefined') {\\\\n	 // It's a browser with a halfassed DOM implementation (like IE6)\\\\n	 // that doesn't implement textContent!  Assume that if it's that\\\\n	 // dumb, it probably doesn't implement disable-content-encoding.\\\\n\\\\n  } else {\\\\n	 var ampy = d.textContent;\\\\n	 if(DEBUG > 1) { alert(\\\\\\\"Got \\\\\\\" + ampy); }\\\\n\\\\n	 if(ampy == undefined) throw complaining(\\\\\\\"'cometestme' element has undefined text content?!\\\\\\\");\\\\n	 if(ampy == ''		 ) throw complaining(\\\\\\\"'cometestme' element has empty text content?!\\\\\\\"	 );\\\\n\\\\n	 if		(ampy == \\\\\\\"\\\\\\\\x26\\\\\\\"	) { is_decoding =  true; }\\\\n	 else if (ampy == \\\\\\\"\\\\\\\\x26amp;\\\\\\\" ) { is_decoding = false; }\\\\n	 else			  { throw complaining('Insane value: \\\\\\\"' + ampy + '\\\\\\\"!'); }\\\\n  }\\\\n\\\\n  var msg =\\\\n	(is_decoding == undefined) ? \\\\\\\"I can't tell whether the XSL processor supports disable-content-encoding!D\\\\\\\"\\\\n	: is_decoding ? \\\\\\\"The XSL processor DOES support disable-content-encoding\\\\\\\"\\\\n	: \\\\\\\"The XSL processor does NOT support disable-content-encoding\\\\\\\"\\\\n  ;\\\\n  if(DEBUG) alert(msg);\\\\n  return msg;\\\\n}\\\\n\\\\n\\\\nfunction go_decoding () {\\\\n  check_decoding();\\\\n\\\\n  if(is_decoding) {\\\\n	 if (DEBUG) alert(\\\\\\\"No work needs doing -- already decoded!\\\\\\\");\\\\n	 return;\\\\n  }\\\\n\\\\n  var to_decode = document.getElementsByName('decodeable');\\\\n  if(!( to_decode && to_decode.length )) {\\\\n	 if (DEBUG) alert(\\\\\\\"No work needs doing -- no elements to decode!\\\\\\\");\\\\n	 return;\\\\n  }\\\\n\\\\n\\\\n  var s;\\\\n  for(var i = to_decode.length - 1; i >= 0; i--) { \\\\n	 s = to_decode[i].textContent;\\\\n\\\\n	 if(\\\\n		s == undefined ||\\\\n		(s.indexOf('&') == -1 && s.indexOf('<') == -1)\\\\n	 ) {\\\\n		// the null or markupless element needs no reworking\\\\n	 } else {\\\\n		set_inner_html(to_decode[i],s);  // that's the magic\\\\n	 }\\\\n  }\\\\n\\\\n  return;\\\\n}\\\\n\\\\n\\\\n//End\\\\n\\\\n\\\\n//utility function for appending USM param on existing URL, parameterized or otherwise\\\\n\\\\nfunction encodeUSMParam(theURL) {\\\\n\\\\n	var rslt = \\\\\\\"XXX\\\\\\\";\\\\n\\\\n	if (theURL.indexOf('?') > 0) {\\\\n		rslt = encodeURI(theURL + \\\\\\\"&format=usm\\\\\\\");\\\\n	} else {\\\\n		rslt = theURL + \\\\\\\"?format=usm\\\\\\\";\\\\n	}\\\\n\\\\n	return rslt;\\\\n\\\\n}\\\\n\\\";\");\";}}");

?>